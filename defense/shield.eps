%!PS-Adobe-3.1 EPSF-3.0%%Title: new.shield.color.EPS%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 9.0%AI9_PrintingDataBegin%%For: Monica McVey%%CreationDate: 9/9/02%%CropBox: 0.000000 0.000000 76.261719 85.377441%%BoundingBox: 0 0 77 86 %%HiResBoundingBox: 0.000000 0.000000 76.261719 85.377441%%LanguageLevel: 2 %%DocumentData: Clean7Bit%%Pages: 1 %%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Core 2.0 0%%DocumentFonts: %%DocumentSuppliedFonts: %%PageOrder: Ascend%%DocumentProcessColors: %%DocumentCustomColors: (PANTONE 288 CV) %%+ (PANTONE 201 CV) %%CMYKCustomColor: 1 0.65 0 0.305 (PANTONE 288 CV) %%+ 0 1 0.65 0.34 (PANTONE 201 CV) %%RGBCustomColor: %%EndComments%%BeginDefaults%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 233 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_src256 256 string def/AGMCORE_dst64 64 string def/AGMCORE_srcLen nd/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_imagestring0 nd/AGMCORE_imagestring1 nd/AGMCORE_imagestring2 nd/AGMCORE_imagestring3 nd/AGMCORE_imagestring4 nd/AGMCORE_imagestring5 nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_mbuf () def/AGMCORE_ybuf () def/AGMCORE_kbuf () def/AGMCORE_gbuf () def/AGMCORE_bbuf () def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_arg1 nd/AGMCORE_arg2 nd/AGMCORE_&setgray nd/AGMCORE_&image nd/AGMCORE_&colorimage nd/AGMCORE_&imagemask nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&&setcolorspace nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_in_rip_sep nd/AGMCORE_host_sep nd/AGMCORE_will_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ccimage_exists nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_ndx nd/AGMCORE_err_strings nd/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/bdf{	bind def} bind def/xdf{	exch def} def/ldf {	load def} def/ddf{	put} def	/xddf{	3 -1 roll put} def	/xpt{	exch put} def	/bdict	{		mark	} def		/edict	{		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end	}def	/ps_level	/languagelevel where{		pop languagelevel	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/ndf{	1 index where{		pop pop pop	}{		dup xcheck		{bind}if		def	}ifelse} def/skip_image{	has_color ne{		dup 256 idiv		{currentfile AGMCORE_str256 readstring pop pop}repeat		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval		readstring pop pop	}{		pop	}ifelse} def/addprocs{     2{/exec load}repeat     3 1 roll     [ 5 1 roll ] bind cvx} def/colorbuf{	0 1 2 index length 1 sub		{		dup 2 index exch get 		255 exch sub 		2 index 		3 1 roll 		put		} for} def/makereadonlyarray{	/packedarray where		{pop packedarray}		{array astore readonly}	ifelse} def/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq 	{		dup /HalftoneType get 1 eq			{			/SpotFunction get			}			{			dup /HalftoneType get 2 eq				{				/GraySpotFunction get				}				{				pop				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}				{dup mul exch dup mul add 1 exch sub}ifelse}bind				}			ifelse			}		ifelse	}	if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/stkpath_clp_npth{	strokepath clip newpath} def/stk_n_clp_npth{	gsave stroke grestore clip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	userdict begin	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont		/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def				/AGMCORE_arg2 xdf	/AGMCORE_arg1 xdf		clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore			currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto		/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			dup (.) ne AGMCORE_arg1 0 lt and				{				pop				}				{				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt					{					currentpoint AGMCORE_deltaY sub exch pop					clippath pathbbox pop pop pop 44 add exch moveto					} if				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show				} ifelse						0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{			dup 94 eq 				{				pop				AGMCORE_arg1 0 ge					{					AGMCORE_arg1 AGMCORE_str256 cvs					dup /AGMCORE_tmp exch length def					AGMCORE_str256 exch 0 exch putinterval					AGMCORE_str256 0 AGMCORE_tmp getinterval					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt						{						currentpoint AGMCORE_deltaY sub exch pop						clippath pathbbox pop pop pop 44 add exch moveto						} if					AGMCORE_str256 0 AGMCORE_tmp getinterval show					}					{					/AGMCORE_arg1 0 def					} ifelse				0 1 AGMCORE_str256 length 1 sub					{					AGMCORE_str256 exch 0 put					}for				/AGMCORE_tmp 0 def				AGMCORE_arg1 0 ne					{					/AGMCORE_arg1 AGMCORE_arg2 def					} if				}				{				AGMCORE_str256 exch AGMCORE_tmp exch put				/AGMCORE_tmp AGMCORE_tmp 1 add def				}ifelse			} ifelse		} forall} bdflevel2{	/AGMCORE_map_reserved_ink_name	{		dup type /stringtype eq{			dup /Red eq{				pop (_Red_)			}{				dup /Green eq{					pop (_Green_)				}{					dup /Blue eq{						pop (_Blue_)					}{						dup /Cyan eq{							pop (_Cyan_)						}{							dup /Magenta eq{								pop (_Magenta_)							}{								dup /Yellow eq{									pop (_Yellow_)								}{									dup /Black eq{										pop (_Black_)									}{										dup / eq{											pop (Process)										}if									}ifelse								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse		}if	}def}if/doc_setup{	Adobe_AGM_Core begin		/AGMCORE_will_host_separate xdf	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf		errordict /AGM_handleerror known not		{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror			{			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and {				$error /newerror false put				AGMCORE_cur_err /AGMCORE_bad_environ eq					{					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version					}					{					AGMCORE_cur_err 0 0					} ifelse				compose_error_msg				} if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def		AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if		/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def		/AGMCORE_&&setcolorspace /setcolorspace ldf	}if	/AGMCORE_&image systemdict/image get def	/AGMCORE_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMCORE_&colorimage /colorimage ldf	}if	/AGMCORE_in_rip_sep		level2{			currentpagedevice/Separations 2 copy known{				get			}{				pop pop false			}ifelse		}{			false		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_gstate_known{		where{			/Adobe_AGM_Core_Id known		}{			false		}ifelse	}ndf	/AGMCORE_GSTATE AGMCORE_gstate_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 7 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr exch put		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	end}def/page_setup{	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def		/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def		/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def		/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or		}ifelse	def		AGMCORE_host_sep AGMCORE_will_host_separate not and {		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def		AGMCORE_color_space_onhost_seps	}if	/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots	}ifelse	{		/setcmykcolor[			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx			/setcmykcolor load dup type/operatortype ne{/exec cvx}if		]cvx def	}if	AGMCORE_host_sep{		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf		/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def		/map_index	{		1 index mul exch getinterval {255 div} forall	}def		level2{		/mo /moveto ldf		/ln /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		/invert_image_samples		{			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def		/get_gstate		{			AGMCORE_GSTATE begin			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def			/AGMCORE_GSTATE_clr_spc currentcolorspace def			/AGMCORE_GSTATE_clr_indx 0 def			/AGMCORE_GSTATE_clr_comps 12 array def			mark currentcolor counttomark				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop			/AGMCORE_GSTATE_fnt rootfont def			/AGMCORE_GSTATE_lw currentlinewidth def			/AGMCORE_GSTATE_lc currentlinecap def			/AGMCORE_GSTATE_lj currentlinejoin def			/AGMCORE_GSTATE_ml currentmiterlimit def			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf			/AGMCORE_GSTATE_sa currentstrokeadjust def						/AGMCORE_GSTATE_clr_rnd currentcolorrendering def			/AGMCORE_GSTATE_op currentoverprint def			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def			currentcolortransfer 				cvlit /AGMCORE_GSTATE_gy_xfer xdf 				cvlit /AGMCORE_GSTATE_b_xfer xdf				cvlit /AGMCORE_GSTATE_g_xfer xdf 				cvlit /AGMCORE_GSTATE_r_xfer xdf			/AGMCORE_GSTATE_ht currenthalftone def			/AGMCORE_GSTATE_flt currentflat def			end		}ndf				/set_gstate		{			AGMCORE_GSTATE begin			AGMCORE_GSTATE_ctm setmatrix			AGMCORE_GSTATE_clr_spc setcolorspace			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor			AGMCORE_GSTATE_fnt setfont			AGMCORE_GSTATE_lw setlinewidth			AGMCORE_GSTATE_lc setlinecap			AGMCORE_GSTATE_lj setlinejoin			AGMCORE_GSTATE_ml setmiterlimit			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash			AGMCORE_GSTATE_sa setstrokeadjust						AGMCORE_GSTATE_clr_rnd setcolorrendering			AGMCORE_GSTATE_op setoverprint			AGMCORE_GSTATE_bg cvx setblackgeneration			AGMCORE_GSTATE_ucr cvx setundercolorremoval			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or				{				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne					{					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark					} if				}{				AGMCORE_GSTATE_ht sethalftone				} ifelse			AGMCORE_GSTATE_flt setflat			end		}ndf		AGMCORE_producing_seps not{				/setcolorspace where{				/Adobe_AGM_Core_Id known not			}{				true			}ifelse			{				/setcolorspace				{					dup type dup /arraytype eq exch /packedarraytype eq or{						dup 0 get dup /Separation eq{							pop							[ exch {} forall ]							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put						}{							/DeviceN eq {								[ exch {} forall ]								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put							}if						}ifelse					}if					AGMCORE_&&setcolorspace 				}def			}if		}if		}{				/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/ln{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def				/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def				/n_color_components		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop 1			}{				/DeviceCMYK eq{					4				}{					3				}ifelse			}ifelse		} def				/setcolor_devicecolor		{			dup type /arraytype eq{				0 get			}if			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def			/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse		/op /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/spclp /stkpath_clp_npth ldf	/f /fill ldf	/ef /eofill ldf	/s /stroke ldf	/sclp /stk_n_clp_npth ldf	/nclp /npth_clp ldf	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/idximg /indexed_imageormask ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf		currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall}def/page_trailer{	end}def/unload{	systemdict/languagelevel known{		systemdict/languagelevel get 2 ge{			userdict/Adobe_AGM_Core 2 copy known{				undef			}{				pop pop			}ifelse		}if	}if}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	Adobe_AGM_Core/AGMCORE_name xddf	false	currentpagedevice/SeparationColorNames get{		AGMCORE_name eq or	}forall}def/current_ink{	dup length 0 eq{		pop true	}{		Adobe_AGM_Core/ink_result false put		{			dup /ProcessCyan eq{				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf			}{				dup /ProcessMagenta eq{					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf				}{					dup /ProcessYellow eq{						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf					}{						dup /ProcessBlack eq{							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf						}{							dup /sep_colorspace_dict AGMCORE_gget dup null eq{								pop false ink_result or Adobe_AGM_Core/ink_result xddf							}{								/Name get eq{									1 setsepcolor									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf								}{									false ink_result or Adobe_AGM_Core/ink_result xddf								}ifelse							}ifelse						}ifelse					}ifelse				}ifelse			}ifelse			pop 		} forall		ink_result	}ifelse}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 		/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf		AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx														AGMCORE_host_sep{								AGMCORE_is_cmyk_sep							}{								Name inRip_spot_has_ink not							}ifelse							{		 						/pop cvx 1							}if							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf												[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	1 setsepcolor	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		/MappedCSA CSA map_csa def		AGMCORE_host_sep level2 not and{			0 0 0 0 setcmykcolor		}{			[/Indexed MappedCSA 			level2 not has_color not and{				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{					pop [/DeviceGray]				}if				HiVal GrayLookup			}{				HiVal 				currentdict/RangeArray known{					{ 						/indexed_colorspace_dict AGMCORE_gget begin						Lookup exch 						dup HiVal gt{							pop HiVal						}if						NComponents mul NComponents getinterval {} forall						NComponents 1 sub -1 0{							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range							NComponents 1 roll						}for						end					} bind				}{					Lookup				}ifelse			}ifelse			] setcolorspace_opt						set_crd		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep{		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor	}{		setcolor	}ifelse} def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMCORE_&imagemask			}{				AGMCORE_&image			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMCORE_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMCORE_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint{		0 get		dup /DeviceGray eq{			pop AGMCORE_black_plate not		}{			/DeviceCMYK eq{				AGMCORE_is_cmyk_sep not			}if		}ifelse	}{		false	}ifelse}def/rdline {	currentfile AGMCORE_str256 readline pop} def/rdcmntline {	currentfile AGMCORE_str256 readline pop	(%) anchorsearch {pop} if} def/filter_cmyk{		dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch	{		AGMCORE_src256 readstring pop		dup length /AGMCORE_srcLen exch def		/AGMCORE_ndx 0 def				AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{			1 index exch get			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put			/AGMCORE_ndx AGMCORE_ndx 1 add def		}for		pop		AGMCORE_dst64 0 AGMCORE_ndx getinterval	}	bind	/exec cvx	] cvx} def/imageormask{	begin		SkipImageProc not{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq{					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					image				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					AGMCORE_host_sep{						currentgray 1 ne{							currentdict imageormask_sys						}{	 						currentoverprint not{			 					1 AGMCORE_&setgray	 							knockout_image_samples			 					currentdict imageormask_sys			 				}{			 					nulldevice currentdict imageormask_sys			 				}ifelse				 		}ifelse					}{						imagemask					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								MultipleDataSources{									4 {pop} repeat									/DataSource [										DataSource 0 get /exec cvx										DataSource 1 get /exec cvx										DataSource 2 get /exec cvx										DataSource 3 get /exec cvx										/AGMCORE_get_ink_data cvx									] cvx def								}{									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def								}ifelse									/Decode [ Decode 0 get Decode 1 get ] def								/MultipleDataSources false def								/NComponents 1 def								/Operator /image def								AGMCORE_is_cmyk_sep{									currentoverprint InksUsed current_ink not and{										nulldevice									}{										invert_image_samples									}ifelse								}{		 							currentoverprint not{		 								knockout_image_samples				 					}{				 						nulldevice				 					}ifelse					 			}ifelse						 		1 AGMCORE_&setgray								currentdict imageormask_sys							}{																	currentcolortransfer								{pop 1} exch addprocs 4 1 roll												{pop 1} exch addprocs 4 1 roll								{pop 1} exch addprocs 4 1 roll								{pop 1} exch addprocs 4 1 roll								setcolortransfer																	MultipleDataSources NComponents AGMCORE_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not{		 								currentoverprint not{		 									knockout_image_samples				 						}{				 							nulldevice				 						}ifelse					 				}if								}ifelse						 		1 AGMCORE_&setgray								currentdict imageormask_sys							}{								image							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentoverprint InksUsed current_ink not and{								}{									currentcolorspace overprint_plate not{										knockout_unitsq									}if								}ifelse							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}if	end}def/tint_image_to_color{	begin		Width Height BitsPerComponent ImageMatrix 		/DataSource load	end	Adobe_AGM_Core begin		/AGMCORE_mbuf 0 string def		/AGMCORE_ybuf 0 string def		/AGMCORE_kbuf 0 string def		{			colorbuf dup length AGMCORE_mbuf length ne				{				dup length dup dup				/AGMCORE_mbuf exch string def				/AGMCORE_ybuf exch string def				/AGMCORE_kbuf exch string def				} if			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop		}		addprocs		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage		end} def			/sep_imageormask_lev1{	begin		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{						{				255 mul round cvi GrayLookup exch get			} currenttransfer addprocs settransfer			currentdict imageormask		}{			/sep_colorspace_dict AGMCORE_gget/Components known{				MappedCSA 0 get /DeviceCMYK eq{					Components aload pop				}{					0 0 0 Components aload pop 1 exch sub				}ifelse								Adobe_AGM_Core/AGMCORE_k xddf 				Adobe_AGM_Core/AGMCORE_y xddf 				Adobe_AGM_Core/AGMCORE_m xddf 				Adobe_AGM_Core/AGMCORE_c xddf 									AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer					currentdict imageormask				}{ 										currentcolortransfer					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll					setcolortransfer					currentdict tint_image_to_color				}ifelse			}{								MappedCSA 0 get /DeviceGray eq {					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer					currentdict imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						currentdict tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll						setcolortransfer 						currentdict tint_image_to_color					}ifelse				}ifelse			}ifelse		}ifelse	end}def/sep_image_lev1_sep{	begin		/sep_colorspace_dict AGMCORE_gget/Components known{			Components aload pop						Adobe_AGM_Core/AGMCORE_k xddf 			Adobe_AGM_Core/AGMCORE_y xddf 			Adobe_AGM_Core/AGMCORE_m xddf 			Adobe_AGM_Core/AGMCORE_c xddf 							{AGMCORE_c mul 1 exch sub}			{AGMCORE_m mul 1 exch sub}			{AGMCORE_y mul 1 exch sub}			{AGMCORE_k mul 1 exch sub}		}{ 			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}		}ifelse				AGMCORE_get_ink_data currenttransfer addprocs settransfer				currentdict imageormask_sys				end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc not{		save mark 			AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMCORE_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentoverprint InksUsed current_ink not and{						}{							currentdict/ImageMatrix get concat							knockout_unitsq						}ifelse					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or{ 								knockout_image_samples		 					}{		 						nulldevice 		 					}ifelse							currentdict imageormask_sys 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}if	end	end}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin    currentdict 2 index known{    	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse	    addprocs /TransferFunction xdf 	    currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/read_image_file{	AGMCORE_imagefile 0 setfileposition	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put	exch	load exec}def/write_image_file{	{ (AGMCORE_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Core/AGMCORE_imagefile xddf 		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf		1 1 Height { 			pop			DataSource dup type /filetype eq{				AGMCORE_imbuf readstring pop			}{				exec			} ifelse			AGMCORE_imagefile exch writestring		}for		true	}ifelse}def/imageormask_l2_overprint{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile	}{		currentdict imageormask	}ifelse} def/indexed_imageormask{	begin		save mark 	 		currentdict 		AGMCORE_host_sep{ 						Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{					knockout_unitsq				}if			}{	 			AGMCORE_is_cmyk_sep{					Operator /imagemask eq{						imageormask_sys					}{						level2{							indexed_image_lev2_sep						}{							indexed_image_lev1_sep						}ifelse					}ifelse				}{					currentoverprint not{						knockout_image_samples		 				imageormask_sys		 			}{		 				nulldevice currentdict imageormask_sys		 			}ifelse				}ifelse			}ifelse 		}{			level2{				imageormask			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_imageormask_lev1{	/indexed_colorspace_dict AGMCORE_gget begin	begin		currentdict		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{						{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer			imageormask		}{						MappedCSA 0 get /DeviceGray eq {				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceCMYK eq {					currentcolortransfer					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll					setcolortransfer 					tint_image_to_color				}{ 					currentcolortransfer					{pop 1} exch addprocs 4 1 roll					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll					setcolortransfer 					tint_image_to_color				}ifelse			}ifelse		}ifelse	end end}def/indexed_image_lev1_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}				AGMCORE_get_ink_data currenttransfer addprocs settransfer				currentdict imageormask_sys				end end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin				currentcolorspace 		dup 1 /DeviceGray put		dup 3 [			currentcolorspace 3 get 			{				exch 4 mul 4 getinterval {} forall				AGMCORE_get_ink_data 255 div 1 exch sub			} /exec cvx		] cvx put		setcolorspace				currentdict 		Operator /imagemask eq{			AGMCORE_&imagemask		}{			AGMCORE_&image		}ifelse				end end}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get	}if}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			false op [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{		currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse		Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/OPIimage{	dup type /dicttype ne{		10 dict begin			/DataSource xdf			/ImageMatrix xdf			/BitsPerComponent xdf			/Height xdf			/Width xdf			/MultipleDataSources false def			/NComponents 1 def			/ImageType 1 def			/Decode [0 1 def]			/SkipImageProc {false} def			currentdict		end	}if	dup begin		/HostSepColorImage false def		currentdict/Decode known not{			/Decode [				0 				currentcolorspace 0 get /Indexed eq{					2 BitsPerComponent exp 1 sub				}{					1				}ifelse			] 			def		}if		currentdict/Operator known not{			/Operator /image def		}if	end	/sep_colorspace_dict AGMCORE_gget null eq{		imageormask	}{		gsave		dup begin invert_image_samples end		sep_imageormask		grestore	}ifelse}def/cpaint_gcomp{	AGM_preserve_spots{		gsave		nulldevice	}if}def/cpaint_gsep{	AGM_preserve_spots{		grestore		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 	}{			gsave		nulldevice	}ifelse}def/cpaint_gend{	AGM_preserve_spots{		Adobe_AGM_Core/AGMCORE_ovp get setoverprint	}{		grestore	}ifelse	newpath}def/AGMCORE_ctm_stack bdict	/push_ctm {		stack length size le{			stack dup length 2 mul array 			dup /stack exch def			copy pop		}if		stack size 3 -1 roll put		/size size 1 add def	}	/pop_ctm {		/size size 1 sub def		size 0 lt{ 			/size 0 def		}if		stack size get	}	/stack 1 array	/size 0 edict def/save_ctm{	matrix currentmatrix AGMCORE_ctm_stack begin 		push_ctm 	end}def/restore_ctm{	AGMCORE_ctm_stack begin		pop_ctm 	end	setmatrix}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}defendsystemdict /setpacking known{	setpacking} if%%EndResource%%EndProlog%%BeginSetupAdobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at leastPostScript Level ^\tand at least PostScript version ^. Ensure that the PPD is correct or thatthe PostScript  level requested is supported by this printer. ) def/AGMCORE_color_space_onhost_seps (This job has content that will not separatewith on-host methods. ) def/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defend put2 2010 true Adobe_AGM_Core/doc_setup get exec%%EndSetup%%Page: name:1 1%%EndPageComments%%BeginPageSetupAdobe_AGM_Core/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddfmark/0 [/DeviceGray] add_csa/CSA /0 /1 [/DeviceCMYK] add_csa/CSA /1 /2 [/DeviceRGB] add_csa/CSA /2 cleartomark800 path_rez1 -1 scale 0 -85.3774 translategsave[1 0 0 1 0 0 ] concatgsave0 0 mo0 85.3774 ln76.2617 85.3774 ln76.2617 0 lnclp0.0078125 0 mo76.2617 0 ln76.2617 0 76.2617 37.46 76.2617 38.1211 cv75.7461 69.1943 40.9248 85.5278 36.5439 85.3774 cv31.9883 85.2212 -0.0957031 69.2402 0 37.96 cv0.00195312 37.3965 0.0078125 0 0.0078125 0 cvfalse op0 0 0 0 cmykf1.84668 2.02686 mo74.4707 2.02686 ln74.4707 2.02686 74.4707 37.7036 74.4707 38.3325 cv73.9785 67.9268 40.8145 83.481 36.6426 83.3384 cv32.3047 83.1899 1.74805 67.9697 1.83984 38.1782 cv1.84082 37.6431 1.84668 2.02686 1.84668 2.02686 cvf1.83984 24.0908 mo1.94531 24.1953 1.84375 2.03271 1.84375 2.03271 cv74.415 2.03271 ln74.415 2.03271 74.415 13.9189 74.415 24.0913 cv1.83984 24.0908 ln/0 <</Name (PANTONE 201 CV) /CSA /1 /TintMethod /Subtractive/TintProc null/MappedCSA null/NComponents 4 /Components [ 0 1 0.65 0.34 ] >>add_csd/0 get_csdsepcs1 sepf0.5045 lw0 lc0 lj3.8636 ml[] 0 dshtrue sadj1.83984 24.0908 mo1.94531 24.1953 1.84375 2.03271 1.84375 2.03271 cv74.415 2.03271 ln74.415 2.03271 74.415 13.9189 74.415 24.0913 cv1.83984 24.0908 lncp/0 get_csdsepcs1 seps5.90625 56.3838 mo8.69727 62.251 12.1484 66.9756 16.9932 70.9951 cv38.125 49.6299 ln58.4648 70.4932 ln62.6582 66.6592 66.7422 62.0166 69.6689 56.5166 cv38.0996 26.146 ln6.05078 56.4463 ln5.90625 56.3838 ln/1 <</Name (PANTONE 288 CV) /CSA /1 /TintMethod /Subtractive/TintProc null/MappedCSA null/NComponents 4 /Components [ 1 0.65 0 0.305 ] >>add_csd/1 get_csdsepcs1 sepf0.5042 lw5.90625 56.3838 mo8.69727 62.251 12.1484 66.9756 16.9932 70.9951 cv38.125 49.6299 ln58.4648 70.4932 ln62.6582 66.6592 66.7422 62.0166 69.6689 56.5166 cv38.0996 26.146 ln6.05078 56.4463 ln5.90625 56.3838 lncp/1 get_csdsepcs1 seps0.5045 lw1.83984 24.2407 mo74.4102 24.231 ln/1 get_csdsepcs1 seps56.2314 7.51416 mo58.207 7.51416 ln59.6543 7.18359 60.1816 6.34424 61.666 6.34424 cv62.7344 6.34424 63.2383 7.05371 64.0225 7.05371 cv64.6855 7.05371 65.7031 6.29736 66.8203 6.29736 cv67.9609 6.29736 68.5254 6.98291 69.2744 7.30176 cv69.9375 7.58545 70.8076 7.57031 71.7285 7.57031 cv71.7031 8.23242 71.7285 8.62549 71.7285 9.18066 cv71.7285 9.74805 72.4883 9.52344 72.4883 10.4458 cv72.4883 11.415 71.5059 11.2256 71.5059 11.6157 cv71.4707 15.2202 ln71.5195 15.6694 72.4277 15.7285 72.4277 16.4136 cv72.4277 17.4302 71.416 17.0781 71.4824 17.8794 cv71.5312 18.4702 71.4824 19.7231 71.4824 19.7231 cv69.5312 19.7231 56.9844 19.8379 56.3711 19.8145 cv56.4082 18.479 56.6152 18.5586 56.6611 17.915 cv56.6982 17.395 55.5332 17.0757 55.5332 16.2012 cv55.5332 15.5981 56.2314 15.6338 56.293 15.0664 cv56.293 11.4736 ln56.2559 11.001 55.2012 10.7646 55.2373 10.0913 cv55.2812 9.28516 56.2188 9.38818 56.2188 8.84961 cv56.2188 8.61377 56.2441 7.73877 56.2314 7.51416 cv0 0 0 0 cmykf56.2314 7.51416 mo58.207 7.51416 ln59.6543 7.18359 60.1816 6.34424 61.666 6.34424 cv62.7344 6.34424 63.2383 7.05371 64.0225 7.05371 cv64.6855 7.05371 65.7031 6.29736 66.8203 6.29736 cv67.9609 6.29736 68.5254 6.98291 69.2744 7.30176 cv69.9375 7.58545 70.8076 7.57031 71.7285 7.57031 cv71.7031 8.23242 71.7285 8.62549 71.7285 9.18066 cv71.7285 9.74805 72.4883 9.52344 72.4883 10.4458 cv72.4883 11.415 71.5059 11.2256 71.5059 11.6157 cv71.4707 15.2202 ln71.5195 15.6694 72.4277 15.7285 72.4277 16.4136 cv72.4277 17.4302 71.416 17.0781 71.4824 17.8794 cv71.5312 18.4702 71.4824 19.7231 71.4824 19.7231 cv69.5312 19.7231 56.9844 19.8379 56.3711 19.8145 cv56.4082 18.479 56.6152 18.5586 56.6611 17.915 cv56.6982 17.395 55.5332 17.0757 55.5332 16.2012 cv55.5332 15.5981 56.2314 15.6338 56.293 15.0664 cv56.293 11.4736 ln56.2559 11.001 55.2012 10.7646 55.2373 10.0913 cv55.2812 9.28516 56.2188 9.38818 56.2188 8.84961 cv56.2188 8.61377 56.2441 7.73877 56.2314 7.51416 cvcp/1 get_csdsepcs1 seps57.8389 7.57373 mo57.8389 7.57373 57.8633 15.6104 57.8389 17.5015 cv57.8389 17.5015 69.5439 17.5249 70.0586 17.4775 cv70.0586 15.3384 70.0469 7.51416 70.0469 7.51416 cv/1 get_csdsepcs1 seps63.9609 7.07715 mo63.9609 17.5249 ln/1 get_csdsepcs1 seps64.1465 16.2368 mo64.6611 16.2603 65.6074 16.6079 66.5264 16.8867 cv67.7158 17.2471 68.9785 16.9946 69.9121 17.1821 cv70.207 17.2412 64.1465 17.2886 64.1465 17.2886 cv64.1699 16.1182 64.1465 16.2368 64.1465 16.2368 cv/1 get_csdsepcs1 sepf64.1465 16.2368 mo64.6611 16.2603 65.6074 16.6079 66.5264 16.8867 cv67.7158 17.2471 68.9785 16.9946 69.9121 17.1821 cv70.207 17.2412 64.1465 17.2886 64.1465 17.2886 cv64.1699 16.1182 64.1465 16.2368 64.1465 16.2368 cvcp/1 get_csdsepcs1 seps63.2734 17.7852 mo63.2734 17.5239 63.5791 17.312 63.9551 17.312 cv64.332 17.312 64.6367 17.5239 64.6367 17.7852 cv64.6367 18.0459 64.332 18.2573 63.9551 18.2573 cv63.5791 18.2573 63.2734 18.0459 63.2734 17.7852 cv/1 get_csdsepcs1 sepf63.2734 17.7852 mo63.2734 17.5239 63.5791 17.312 63.9551 17.312 cv64.332 17.312 64.6367 17.5239 64.6367 17.7852 cv64.6367 18.0459 64.332 18.2573 63.9551 18.2573 cv63.5791 18.2573 63.2734 18.0459 63.2734 17.7852 cvcp/1 get_csdsepcs1 seps63.6211 16.2368 mo63.1055 16.2603 62.1602 16.6079 61.2402 16.8867 cv60.0508 17.2471 58.7891 16.9946 57.8555 17.1821 cv57.5605 17.2412 63.6211 17.2886 63.6211 17.2886 cv63.5967 16.1182 63.6211 16.2368 63.6211 16.2368 cv/1 get_csdsepcs1 sepf63.6211 16.2368 mo63.1055 16.2603 62.1602 16.6079 61.2402 16.8867 cv60.0508 17.2471 58.7891 16.9946 57.8555 17.1821 cv57.5605 17.2412 63.6211 17.2886 63.6211 17.2886 cv63.5967 16.1182 63.6211 16.2368 63.6211 16.2368 cvcp/1 get_csdsepcs1 seps23.4062 20.7744 mo23.6016 21.5425 24.1787 22.0508 25.123 22.0508 cv26.8779 22.0508 28.5713 20.7505 29.5898 20.0181 cv30.3867 19.4507 31.209 18.8481 31.209 17.6069 cv31.0625 18.0796 ln31.0625 18.0796 32.4365 16.709 35.8223 17.7959 cv36.7637 18.0981 40.792 20.3604 41.6631 20.7271 cv42.4121 21.0464 45.0352 22.9282 49.1348 22.2026 cv49.1348 22.2026 55.3945 21.3413 53.9961 14.895 cv52.9971 10.2876 53.3066 9.96045 53.6875 8.48291 cv53.541 8.41211 49.8594 7.58496 49.957 12.6904 cv48.3613 12.856 46.3252 14.061 47.6504 17.229 cv48.1904 16.4248 48.9141 15.5742 49.9082 15.5742 cv50.5332 15.5742 51.1934 16.4731 51.2334 17.1343 cv51.332 18.7417 49.7119 19.4507 47.7002 19.1196 cv46.6797 18.9521 45.7402 17.8218 44.334 16.8042 cv44.5801 16.686 44.8037 15.8579 44.8037 15.5269 cv44.8037 14.7114 44.1045 14.3335 43.627 14.061 cv43.7246 13.7778 43.9199 13.3994 43.9199 13.1157 cv43.9199 12.4658 43 12.5132 42.6445 12.2651 cv42.791 12.064 42.791 12.1826 42.791 11.8867 cv42.791 10.9409 42.9395 10.4209 41.0254 10.4688 cv41.1846 9.53467 40.9883 8.93213 40.3379 8.67188 cv38.9141 8.48291 ln38.0312 8.31787 38.9121 8.02344 38.0967 7.23779 cv37.3691 6.53613 36.1719 7.23779 36.1719 7.23779 cv36.1719 6.58789 35.7246 6.07178 34.9395 6.07178 cv34.5215 6.07178 34.0068 6.10742 33.7129 6.26123 cv33.123 6.73389 ln32.3867 6.73389 32.2031 6.07178 31.3564 6.07178 cv30.5098 6.07178 30.166 6.73389 29.835 7.15918 cv29.2578 6.88721 29.1846 6.40283 28.4121 6.40283 cv27.958 6.40283 27.8232 6.88721 27.627 7.11182 cv27.123 7.66748 27.1592 8.24316 26.374 8.52686 cv26.082 8.01318 ln26.0723 7.98096 26.0645 7.94824 26.0566 7.91553 cv24.9023 8.47119 22.3008 14.4038 22.3008 15.6206 cv22.3008 16.7793 23.3076 16.2715 23.3076 17.5127 cv23.3076 18.2451 22.2285 18.7773 22.2285 19.4033 cv22.2285 20.1953 23.1484 20.585 23.9453 20.585 cv23.4062 20.7744 ln0 0 0 0 cmykf0.5042 lw23.4062 20.7744 mo23.6016 21.5425 24.1787 22.0508 25.123 22.0508 cv26.8779 22.0508 28.5713 20.7505 29.5898 20.0181 cv30.3867 19.4507 31.209 18.8481 31.209 17.6069 cv31.0625 18.0796 ln31.0625 18.0796 32.4365 16.709 35.8223 17.7959 cv36.7637 18.0981 40.792 20.3604 41.6631 20.7271 cv42.4121 21.0464 45.0352 22.9282 49.1348 22.2026 cv49.1348 22.2026 55.3945 21.3413 53.9961 14.895 cv52.9971 10.2876 53.3066 9.96045 53.6875 8.48291 cv53.541 8.41211 49.8594 7.58496 49.957 12.6904 cv48.3613 12.856 46.3252 14.061 47.6504 17.229 cv48.1904 16.4248 48.9141 15.5742 49.9082 15.5742 cv50.5332 15.5742 51.1934 16.4731 51.2334 17.1343 cv51.332 18.7417 49.7119 19.4507 47.7002 19.1196 cv46.6797 18.9521 45.7402 17.8218 44.334 16.8042 cv44.5801 16.686 44.8037 15.8579 44.8037 15.5269 cv44.8037 14.7114 44.1045 14.3335 43.627 14.061 cv43.7246 13.7778 43.9199 13.3994 43.9199 13.1157 cv43.9199 12.4658 43 12.5132 42.6445 12.2651 cv42.791 12.064 42.791 12.1826 42.791 11.8867 cv42.791 10.9409 42.9395 10.4209 41.0254 10.4688 cv41.1846 9.53467 40.9883 8.93213 40.3379 8.67188 cv38.9141 8.48291 ln38.0312 8.31787 38.9121 8.02344 38.0967 7.23779 cv37.3691 6.53613 36.1719 7.23779 36.1719 7.23779 cv36.1719 6.58789 35.7246 6.07178 34.9395 6.07178 cv34.5215 6.07178 34.0068 6.10742 33.7129 6.26123 cv33.123 6.73389 ln32.3867 6.73389 32.2031 6.07178 31.3564 6.07178 cv30.5098 6.07178 30.166 6.73389 29.835 7.15918 cv29.2578 6.88721 29.1846 6.40283 28.4121 6.40283 cv27.958 6.40283 27.8232 6.88721 27.627 7.11182 cv27.123 7.66748 27.1592 8.24316 26.374 8.52686 cv26.082 8.01318 ln26.0723 7.98096 26.0645 7.94824 26.0566 7.91553 cv24.9023 8.47119 22.3008 14.4038 22.3008 15.6206 cv22.3008 16.7793 23.3076 16.2715 23.3076 17.5127 cv23.3076 18.2451 22.2285 18.7773 22.2285 19.4033 cv22.2285 20.1953 23.1484 20.585 23.9453 20.585 cv23.4062 20.7744 lncp/1 get_csdsepcs1 seps26.1172 15.79 mo26.1172 15.79 27.3936 16.2812 27.3936 16.5464 cv27.3936 16.9058 26.5684 17.3022 26.0195 17.7754 cv25.332 17.7754 ln25.5781 16.9717 25.332 17.2646 25.332 16.5464 cv25.332 16.0073 25.9014 15.79 26.1172 15.79 cv/1 get_csdsepcs1 sepf0.5045 lw26.1172 15.79 mo26.1172 15.79 27.3936 16.2812 27.3936 16.5464 cv27.3936 16.9058 26.5684 17.3022 26.0195 17.7754 cv25.332 17.7754 ln25.5781 16.9717 25.332 17.2646 25.332 16.5464 cv25.332 16.0073 25.9014 15.79 26.1172 15.79 cvcp/1 get_csdsepcs1 seps30.7793 13.6143 mo31.4424 13.2954 31.1348 12.48 32.2031 12.48 cv33.1475 12.48 33.5039 13.1416 34.3623 13.1416 cv34.9395 13.1416 35.3438 12.5742 36.1289 12.5742 cv36.8281 12.5742 37.748 13.52 37.6016 14.6543 cv37.6016 14.6543 40.0547 13.8506 39.957 16.498 cv41.9199 15.8364 41.7246 17.4556 41.9199 18.2471 cv42.1172 19.0039 43.3926 18.3892 43.1963 19.9961 cv/1 get_csdsepcs1 seps4.58594 7.57812 mo6.56152 7.57812 ln8.00977 7.24707 8.53711 6.40771 10.0215 6.40771 cv11.0898 6.40771 11.5918 7.11719 12.377 7.11719 cv13.0391 7.11719 14.0586 6.36084 15.1748 6.36084 cv16.3164 6.36084 16.8809 7.04639 17.6289 7.36523 cv18.291 7.64893 19.1621 7.63428 20.083 7.63428 cv20.0586 8.2959 20.083 8.68896 20.083 9.24463 cv20.083 9.81201 20.8438 9.5874 20.8438 10.5088 cv20.8438 11.478 19.8613 11.2891 19.8613 11.6787 cv19.8252 15.2842 ln19.874 15.7329 20.7822 15.792 20.7822 16.4775 cv20.7822 17.4941 19.7715 17.1421 19.8379 17.9429 cv19.8867 18.5342 19.8379 19.7866 19.8379 19.7866 cv17.8867 19.7866 5.60449 19.7988 4.99121 19.7749 cv5.02832 18.4395 4.9707 18.6221 5.01562 17.9785 cv5.05273 17.4585 3.88672 17.1396 3.88672 16.2646 cv3.88672 15.6621 4.58594 15.6973 4.64746 15.1304 cv4.64746 11.5371 ln4.61133 11.0649 3.55566 10.8281 3.5918 10.1543 cv3.63672 9.34912 4.57422 9.45215 4.57422 8.91357 cv4.57422 8.67725 4.59863 7.80273 4.58594 7.57812 cv0 0 0 0 cmykf4.58594 7.57812 mo6.56152 7.57812 ln8.00977 7.24707 8.53711 6.40771 10.0215 6.40771 cv11.0898 6.40771 11.5918 7.11719 12.377 7.11719 cv13.0391 7.11719 14.0586 6.36084 15.1748 6.36084 cv16.3164 6.36084 16.8809 7.04639 17.6289 7.36523 cv18.291 7.64893 19.1621 7.63428 20.083 7.63428 cv20.0586 8.2959 20.083 8.68896 20.083 9.24463 cv20.083 9.81201 20.8438 9.5874 20.8438 10.5088 cv20.8438 11.478 19.8613 11.2891 19.8613 11.6787 cv19.8252 15.2842 ln19.874 15.7329 20.7822 15.792 20.7822 16.4775 cv20.7822 17.4941 19.7715 17.1421 19.8379 17.9429 cv19.8867 18.5342 19.8379 19.7866 19.8379 19.7866 cv17.8867 19.7866 5.60449 19.7988 4.99121 19.7749 cv5.02832 18.4395 4.9707 18.6221 5.01562 17.9785 cv5.05273 17.4585 3.88672 17.1396 3.88672 16.2646 cv3.88672 15.6621 4.58594 15.6973 4.64746 15.1304 cv4.64746 11.5371 ln4.61133 11.0649 3.55566 10.8281 3.5918 10.1543 cv3.63672 9.34912 4.57422 9.45215 4.57422 8.91357 cv4.57422 8.67725 4.59863 7.80273 4.58594 7.57812 cvcp/1 get_csdsepcs1 seps6.19336 7.63721 mo6.19336 7.63721 6.21777 15.6738 6.19336 17.5649 cv6.19336 17.5649 17.8984 17.5884 18.4141 17.541 cv18.4141 15.4019 18.4014 7.57812 18.4014 7.57812 cv/1 get_csdsepcs1 seps12.3164 7.14062 mo12.3164 17.5884 ln/1 get_csdsepcs1 seps12.5 16.3003 mo13.0156 16.3242 13.9619 16.6719 14.8809 16.9502 cv16.0703 17.311 17.332 17.0581 18.2666 17.2456 cv18.5615 17.3047 12.5 17.3521 12.5 17.3521 cv12.5244 16.1821 12.5 16.3003 12.5 16.3003 cv/1 get_csdsepcs1 sepf12.5 16.3003 mo13.0156 16.3242 13.9619 16.6719 14.8809 16.9502 cv16.0703 17.311 17.332 17.0581 18.2666 17.2456 cv18.5615 17.3047 12.5 17.3521 12.5 17.3521 cv12.5244 16.1821 12.5 16.3003 12.5 16.3003 cvcp/1 get_csdsepcs1 seps11.6289 17.8486 mo11.6289 17.5874 11.9336 17.3755 12.3105 17.3755 cv12.6865 17.3755 12.9902 17.5874 12.9902 17.8486 cv12.9902 18.1094 12.6865 18.3213 12.3105 18.3213 cv11.9336 18.3213 11.6289 18.1094 11.6289 17.8486 cv/1 get_csdsepcs1 sepf11.6289 17.8486 mo11.6289 17.5874 11.9336 17.3755 12.3105 17.3755 cv12.6865 17.3755 12.9902 17.5874 12.9902 17.8486 cv12.9902 18.1094 12.6865 18.3213 12.3105 18.3213 cv11.9336 18.3213 11.6289 18.1094 11.6289 17.8486 cvcp/1 get_csdsepcs1 seps11.9766 16.3003 mo11.4609 16.3242 10.5146 16.6719 9.5957 16.9502 cv8.40625 17.311 7.14453 17.0581 6.20898 17.2456 cv5.91504 17.3047 11.9766 17.3521 11.9766 17.3521 cv11.9512 16.1821 11.9766 16.3003 11.9766 16.3003 cv/1 get_csdsepcs1 sepf11.9766 16.3003 mo11.4609 16.3242 10.5146 16.6719 9.5957 16.9502 cv8.40625 17.311 7.14453 17.0581 6.20898 17.2456 cv5.91504 17.3047 11.9766 17.3521 11.9766 17.3521 cv11.9512 16.1821 11.9766 16.3003 11.9766 16.3003 cvcp/1 get_csdsepcs1 seps14.3164 53.9658 mo14.3164 50.5947 17.1533 47.8604 20.6523 47.8604 cv24.1523 47.8604 26.9893 50.5947 26.9893 53.9658 cv26.9893 57.3369 24.1523 60.0674 20.6523 60.0674 cv17.1533 60.0674 14.3164 57.3369 14.3164 53.9658 cv0 0 0 0 cmykf14.3164 53.9658 mo14.3164 50.5947 17.1533 47.8604 20.6523 47.8604 cv24.1523 47.8604 26.9893 50.5947 26.9893 53.9658 cv26.9893 57.3369 24.1523 60.0674 20.6523 60.0674 cv17.1533 60.0674 14.3164 57.3369 14.3164 53.9658 cvcp/1 get_csdsepcs1 seps31.7363 39.3047 mo31.7363 35.9336 34.5742 33.2012 38.0723 33.2012 cv41.5723 33.2012 44.4082 35.9336 44.4082 39.3047 cv44.4082 42.6763 41.5723 45.4072 38.0723 45.4072 cv34.5742 45.4072 31.7363 42.6763 31.7363 39.3047 cv0 0 0 0 cmykf0.5042 lw31.7363 39.3047 mo31.7363 35.9336 34.5742 33.2012 38.0723 33.2012 cv41.5723 33.2012 44.4082 35.9336 44.4082 39.3047 cv44.4082 42.6763 41.5723 45.4072 38.0723 45.4072 cv34.5742 45.4072 31.7363 42.6763 31.7363 39.3047 cvcp/1 get_csdsepcs1 seps48.1719 53.9658 mo48.1719 50.5947 51.0088 47.8604 54.5088 47.8604 cv58.0078 47.8604 60.8447 50.5947 60.8447 53.9658 cv60.8447 57.3369 58.0078 60.0674 54.5088 60.0674 cv51.0088 60.0674 48.1719 57.3369 48.1719 53.9658 cv0 0 0 0 cmykf0.5045 lw48.1719 53.9658 mo48.1719 50.5947 51.0088 47.8604 54.5088 47.8604 cv58.0078 47.8604 60.8447 50.5947 60.8447 53.9658 cv60.8447 57.3369 58.0078 60.0674 54.5088 60.0674 cv51.0088 60.0674 48.1719 57.3369 48.1719 53.9658 cvcp/1 get_csdsepcs1 seps44.4277 16.5532 mo42.8086 14.771 41.3809 12.6787 41.1348 12.5742 cv40.3379 12.2432 38.4355 8.46143 33.332 8.17773 cv32.0352 8.10547 27.1543 8.57959 26.9863 9.82861 cv/1 get_csdsepcs1 seps31.2412 17.9277 mo31.2598 17.8057 31.2705 17.6753 31.2705 17.5381 cv31.2705 17.3354 30.0742 17.4502 29.79 17.3657 cv29.5938 17.3066 30.3164 17.0181 30.1904 17.0181 cv30.9268 16.7344 32.8125 15.9043 32.1543 15.269 cv31.5156 14.6543 31.1348 14.0044 30.7793 13.6143 cv30.3008 13.0942 29.7363 12.8105 28.8652 12.8105 cv28.1172 12.8105 26.9043 14.1089 26.4004 14.4639 cv26.7695 14.1089 27.834 13.1885 27.834 12.4321 cv27.834 10.7305 26.4727 9.25293 26.1172 7.84668 cv/1 get_csdsepcs1 seps23.9043 20.5161 mo25.2529 20.5161 26.0137 20.4219 26.6523 20.0908 cv27.3516 19.7246 28.6152 18.9326 28.9102 18.2471 cv/1 get_csdsepcs1 seps1 lw1.82324 2.03271 mo74.4463 2.03271 ln74.4463 2.03271 74.4463 37.7095 74.4463 38.3389 cv73.9551 67.9326 40.791 83.4868 36.6191 83.3442 cv32.2812 83.1958 1.72461 67.9756 1.81641 38.1851 cv1.81738 37.6489 1.82324 2.03271 1.82324 2.03271 cvcp/1 get_csdsepcs1 sepsgrestoregrestoreAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailerAdobe_AGM_Core/page_trailer get exec%%TrailerAdobe_AGM_Core/doc_trailer get exec%%EOFgsave userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse grestore showpage%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 9.0%%For: (Monica McVey) (University of Penn)%%Title: (new.shield.color.EPS)%%CreationDate: 9/9/02 2:34 PM%AI9_DataStream%Gat=/CQh[eP5PR\&,-GD&A&_NIP@BfgRe)L0eCtY$&=.peT\6@e?'4g)OpQqHVS2/LX_="'/n2ub0%lLb4iUJi5*mumFB2<lJ9qF%+&=qaA*7XqHurXB@I`9lIr/Nc2lAK*lY7a)ZC4I%]CaW#/FcA7U;ORGG3do+rp&u^^K^Fk2eTbiDL_8RHb*Lbs#KuQea<&&G10f+%PMPUIPY\l+XLRL*h3Sqi?i.=erdDP(Dnl3.G'<+2K=1`!66a(W]j/8:6'adumj7jS]=km<lrStu^9P;BmWs"8o_Y[YA+$0rhu'q[%]lWtWh"0pXD_#Q1*6Q%tbhdfTg%O=ip6VgI(RK`!Q2S`BaSr!!T*a\iEgg).i;bc4M4&)E%#<J@%f1SJilge?GlIZnSMR]9Hi6L2%RD;]=GkULKGI*QBg"FY%;oE$,gs9RT+Gkpsj#Xs5-Wm/D4oG+es)'(HhX%Co+YiCSO8Grl?7CmJlB6q8\?GaYXDYKPeO)8miQ&j2%:.0DW:#JJV,s?nYdJqq_AH[bf^9INb,!5a0;:kUra>P\XI)R\-;C9kHLi6R'H2m_r'TlJn6[sBp>oe62(2ji`,Rsc3$5eABbB4E"%Q<hmV-El[kDu/@`FO+"Rc.-6Ho:)cJ`Fc6\o]?)AC@a(q9sRl-SY@cU\,H<HX3EqIk0%\D/pk%=kdU':EU>^>eN;1<F<:6^$%?"D%ht75cjS"o9IaSt[^A@j&npL,(Vs.@?i;%MFou$4*88D^?`\*"!^\oo76kX9`l&,)'e,.9nQsWm(9."1(nBSOu(N=rgqouateJ!'l%.d4k:]&19hf7t_\Ggkbb]3&>4Kt$IHB+Q'knD+o;GGOb0?0^nUc,Ja@fl]a`P&i;"lq\Z$kQ.A-"GA9cn:RpJ0$\X,]V6?mH3tV+%Jcfh5n+=6^BDDbdh-TCJjn%6qGG)s(6AEJRf6ZQ$6XpW(q+\W[,.,!Dlo3PpUW(@<Xt2q*kRG^g440[A>/IH!hVujlRm2=_O8k1]%rt"&V?0Il&5Q>3($c.==M19-M/uOb@f:DN>q$7Odcc7-2K_%k4)jDPhGPL7hrU3'j/'-I0Qc_#,+>S4"&NViVf#RtR+nBnm$t@eX%DST"<,tXZo4CBP4.DcYYF97sDfm&k@J=RaXT(!EOKIDMcRMi?YUQcGB#]N+prE[q^fKf;nibPqgg90/&g+,A5Xn@T*rnNJ4nq*n!%0T7#9D#9^@j6s-o^L,*<m`FJIcRg%4nu-p5rT^]Wrc@W)eHUT4+%T*"HniRrIkGDZ6X9G)ET@B!H\(ql,LB4&MoRJO&?bobU3hi9%nZN4S'2@J7nr,5&>6L:!KR!%Qia[7q,2Fg<TJ+l?4FN$J;hk*n(8u`IY4&FlP<[CY=STqr%Z"\gaRgkG)MiMhSrS[GcMps`r>[;S%?hGGQ$c0Sf?KLR4m4H'KqgNa9rU&-"G)M,RRWW8Dm<8)=^UjD]ZgOFQDf:*jIb=%rO1LC%YFIlJZ*f(m@IpM^%.V*g[ppXBh$be.%lodW2EW-WHIuF'%[E*P6kMra8me<gXP_L=U[_KD`)-Q:GM<F]sr;]%X'8'ul2,mF[XUZia\];U#6k+V!XQal.r<N.g@e?pPr%5WP%'jA6"rp]5k[D1qV;MNnChd8K4q"Y?@GPf+hqFoUM\$s&67Mf>*32rAMpa"rpJ5=Tg!n`Qsl1])h4[R`M%1;_+CAe1fD(`C=PbC]^%]#RTdgIc_864I:.hJOX\.>]u+HJ,J?dIZ,1p$JH"\[m@.D#U9]r`")"n`%rbB0E?]cWA<oDUf\"V#-e=eTQ$/d%.M><6Dt<o6Rm\%kV)#gO`;N8ljcNm+._n9fBqGhqeKAC\%.+10!BIXRmTEG5$^>uQ=C;6j`jrZ8gQTsOWj.*PSgo2(E';!dIU]]%u%HuO1KD`@#s:'%-T4.c4D(mL/oUlR0sa%^7!jjYn`Ad(:1F17<%:fITCY#E5i$Em/qCNC_?+I%#OD`$.G4&GW)/@a5W1/f2$I!->+-;6$lsB4*f++!%N94Rh6`_*\jJB7t#^e3sPCh".N"8Z$Tj4.c(Ym8Vs)jMGIA=k_9(),=k0;m-Va\T\A/h3K^F[L)mb,I4N#r^'-[$A#J-oVRW3^1J%>GbuV.1)u3`D^'9/sA"Gm!OORZrjQi$jk)qd8mpr.Vl7s?ieE@4as=Q5YVuiVL\rMYFJl4UkVj;^4HmRAIS3i@oBIm@:mBu`ZRf`%-R[MU;AFm_HD=RLk`bJ,7hta>E^Y'H$*p1rltF7uZ7!1,%UT;qkV>d1bh3^b;eg#eq*?VL+;_F#BaZ//5/U9(HJ[V6#_*]Fl[/=f%?i9b'e^LF1g)1oW,mUu>7rK=dp+r"hjC!e_AR\\7g6K<m)4D')%<#uJ=5dQA"PhGUmVLi6X>f\Y*aKU\&l4B,@tc:m.Tc.3FA04Z%/"@5'ap/;)E4VH1Kh)1uKV_5-8E9,QKJqb3?<C'H>A+nI/&'Mf*?U&?]B_uq<s*n&;(e^k;oF63.[Ql9@D\n!k-FVuo+MgAC49sG%S\!0Epgkj$*5"d4LbYNrAP)K1[S[bJ?sA4<J=#FGQtb`]\8Dke^enr0'c.lm[P]/UM?Ym'+f'Wr<3;l!?!dYI6Gr,D]jQi&6EYuo%<Ti(^oQn&Y5ta,88IGh;>Z\cRN4Br[_:R.mZlVqaW&-#DE+V)4JXQC]X@;Ri5[:pVOhkZL[Tr=WIh7W-MgCVQ8.;l!=81C&[u`%,%.\Q$-<<\d_'Ajbde7''?R_>Z-R,JB%/@+D_Eo/K#@taH,N"b:+1uO<>'&d&96VW+9a8n%qq#>RF*]oPdr+]V$S.q;,IChp_4#3?M%r%<t'mCj0I9+5?hp:Ss5#o;6KLKI$V&<eLYNgPcCAn\.V3+.lB84\9GfAc5C5_%b0Gj"R$0LS7ORIW+^^m=6kSVnlW_CUWB[5_7N%4gPAGN^sV`/"0hJYtiADi_E'-j$X&VVP9TN8#Us!05Yf[6F[LcNO`btK#JM_(mS>OK%4PiKWN.NV3mWI[BN3?)s8Kl"V^OD[<U@7%ra\n:Ju-W1,=&9,+]&D%O;!S2M0D?!+,P8SAYR@hU4@[X$"Bn*ojWY!;L<)EF[ZpY"HntnF2VLJWa_!U"9U10P@oONQ(a>d&GSM*%lV]5]Oq^WugF=!.F\$$]F[lSX,Y3kCbn8M8\94(1@C58I)oAt_)Q_="-V74/#UYj'Jn2"[X+^[4.aF/^pL1n-Bg`<EkMW+$B`]<9%ef'NG"I:EJ@_gBX`nJKhKT$HWac6TL;QWLNWOK8d/$::$.Wt"72M`:=+GfkM"B@rh_jj"!EI%*s!`A;%mYn4jg30oh[[Ua=3P*I9%4g26)F*'#i#AOF!cDUk0A[Mmp;,i3VKh=;qP5%:=C7YO3F!"oHIDf$$1AYVO&SgV!KRkp)E9b1bQ3:[f;PaY")%:fI9ZJ!LTLi*5%=j#9fV7U,o@WX$^66e#'#;'[\/8N'O#`=[?N&QoclK$KaPpU2&J)8'#kEK^dNC9VODh=;;^skaP3AF@kF"\sHQAW7W+qCUe78TAM%CV`(70+jSF)=lupWRHeU09OX.BLK<@<TB'.=KW"FFu,6lGUdP'NJ^kA!'qrt$[:]]K3PpPMC'1t18c+(#%Tn_,*GZ#p=W[/A_M84%TKsC)k_'3fJ"#ts+gEU;!U$NPNn>2h+?\COJG!A(:SX>7h"Vk[C+TWM1#b3c/q.&)5*u02J!FNNa*.jqoJ+QB(&>r$fp*ao8O/YM%WK40s*Np.`Z.`)g=%\r81!K)#:oYkdmrXY)G,7VPdWD<5;SO(WBBd[]L&p[ZPR<o1L,H%jLh5^<((`JKrNM#E$'VaIK-b]t(bKbu%KKUK!Kumn$KredcCUFS?E)`c>bp(Rs`!fd-e@iYZ3$Y&@_N%&>$oWA@+H^93W\^X)CisLH#\naG_6t$q7[8[D_WKCQf2Z[AK):&4%?pfjEe@$o\/ULeOV?Qq1TMpIo75G':pIm:nGR$Bio5K%*oiMtW`.SE"A)ZNI:c4YmNqlAC.N1`U-MfnY6XA\.BmM*3#ingA4,qmk%&s-2qBZZ8'$as3"@^G4o_LgfAQ6ieZ@SC8CT^n$Sjp[+an)+F>C+c:+)j__i<NC7T5a)=#Uld(fJk4f$9G@)2/k0?6@FEYJ34!(-%Z@_Ej-:p#:Q=Up-e#_46-k=msgDUg0ds2C.L$h_ZH"Ci&>F#JCQ[1R4FsV+]1)c$[&S!XDj";Tti%TjZXgCRSb<6S_7[QI3S8g6I%G]c+_p!T!IhPe3/MKmCleU-s;pjbFq1-<2B@YV^[1+a5sfKPE9=`ITU,'2)'gbYr->N(S``lLu6I8*_A_Xou7R<GGBf,Q<,d>X'T%9Vm81k^f/a9E@s&(qDRJeJTqOS?kgD,1^_?1Im1M2.6u??7%t>o>JA5f&-*5X*$*-$d[j^\4djkG]RCt,F'%3\<?'piLn2bQ%R%%%ES4_nK8#pjRqn5=,U`jb:I10c/DNf_/$f@JO3IBd<H@f1g+d,mB?M@BQAObKiWqodjX!miV.;u8.s>BVo/;9LWbO[T;$!qnD)W#q%q-"Hc]tu3Z&VI/0lUm)&fFP^Y=fO2]fd===7(i88k-WKW+p&b,9BS<55oW1Pe/2%k6'''*F!f?:?T@%Qcbe74&A9Of+lB\8`/^rA%'7d]gq'il"M%HO.*I;2URZ2Btm!VM3mD':bMHX,DZ5C_f\ZcC$VHpaBe<r/Uc<=LC^H5N<3*k^&Kec(1KGBOj-#$im5S&h>6\nQs%_Nh[SWMQCu>Yp!?AdHOS`pWM/L-_6kIQD)Z+C,r8WV(Os6lh;j(Isk?h.3<2!K;kTL3W,ng28.4P=P,inJj<D6uh?rSPB[9qOYq0%\J)r]8#KZ\f"`7:XB=3o[KsUt2S>Ls!cMQ-HbVPWI',d-0675p8r@CCU7EFt];_X_aB6=dFtQm_P+,m4@=BDP[n=7f7mr%'S/%ri%/G0FLKrnpLj4lej<-rSMC1J#V21Jq)0bLb!NKkql9+F\Y%(1hN)b/_$5]^\.(JR<=akjM*N>sS060<&0Z<k`Vb<TW!Yk#Ar-:o`Z%n1l/&$!K3P3K\)UpV_BGBBF/6X#EX[FIF0''G=A#[O7el!B&"[fP??</HnFE60b1$Ua\KJi>>ssBo-0f7+3pV+*n[n7!)2%P=:e2%eo?)O_6T+F@!u\#j>&N1Cd"4fU7A\m)b0&(c"Ur$pCr-K8fH6Q$M[oCBf/49"Q!$qRo4H*<&hCoMHGNac?c6'@[K:>JCj:g3hr[V%ZfE7M"U5Na>0%@DfAtjAq)K0^A,<.LSOsJ>a4:>o>NOg77:E&"QN9:tnY+@1fe0N\6BK5JL7fIHG)8)M>5:+P6KG,_BSMm^1gZ.Y%V]LZW7.cm;jqLW9eqcRtp5$;_@B?iA'euaiPa3oC$'Itda2^qQAYP,K4gl)+&nH)BjA\sW)dLr9+\=cn-A$)74kjc2D/=!XJo?I0%(`^g(kM%beSOS_7BL]q/(cqR;[pXr66nfLpCJEtL)&'j[D5>*>m7[`W2G+)\g:I`eo<Fr'YTTmO<@F'l/B!E]P:uPr*Bg)fOHb-I%A.=C]`=\F2T&f*#<$jE0+?If&+idF51;u#\]>@bp'WfR_SR]OYL`N#&&WrjL13a3*cfh^JdTUa#Co;rI$!)gNhTl3:)ER(D_NGe4%F@B,P-n]Uc633uR$jPEBd.Draf%ogp7Al,=kT^foK4fJ32sQ9Dr$W"fegtmTjrkG^[Sb#;R40=D&O-]-+NBoE88**_)aY5n#&MrM%YDeIN3_9XM3*d#?YVI%&*s^0a$V+,ro;%Vp$p>M.QoTS2OiO^jcr!H?&nf56l's^`g:3S\RmY]T,*)q3ake@f1SHe5p)KJ,VG@u5%9IK7#Y(IsUXg*lRUlW2O`\b,3[7S*WMG29clHt7k=mI:lS&1\Q/Pk]q)Q+GsqmG'>?kthJ1JU6.;U+oNM!ilj)Q@>32bp:6>Dn'X%Ui30&:QkLd2/P<-hK'U,l\tR3lOIoXcR#s=B@B![588Ub4VtW2[!gstdh@+u/e.R!#HIX)H?RV/W2"\t`S.)65*fIBH'Z*OSa$6Y%U5H#B9RXj6&XGP@/Ta_u%<9\1Ln'Bm+_u@4l&IH`RqN,p`+_PmrNtNs(gg]"=uRrZLU+h[q0iFO?;+7V<7>Oc:3Xu22a24#:HcJ_%gM,$SE`1fa#[TB<3QKbS=KN;q3(>,g#,Jkreu&OaBs7+Ji_Vn4</bW?Ui!!(K8(NpU!`'N7XUZE,')CS5d]EKO[c?Bm"*WV_b$C^%Egr):O*7<4iFkfOnO\iV2I<s^`:\Lk4W4OGdh/mOa,Kj?J#)Yp,\b846tYR;@I;Jj:4ltKqb?3/8MsA)V\qJM3M.^5ic_O$aH[4\%a\\U$UV`^`QWZ1\Cb%l@V#;C)!\(O5N31:U3K+UfX1c"8m9)ZCA*7uLTrEY40H$FWn@bdO<SLc6*^475SN1gm[nHQK.=`_M[6@/P%`c'2C@LgZ>IApE7+G&jO2jb@9&cLuLP!^0"c`e<U$BBL$HcdZuA'c]OI)*I^Gm@Nae:M4fZE30PUsis#j%NA_*A!]4b-)ZX%[l9s%,c=AA0C6<$W#CERnLA/!SD?60WJBQuY6_&ThG_HT3cAC^=H1U;e=S^oV+kt9;q\sHL^n%(n!^1[HYErED,+Cb/Db%D=I^BY/>YsK%5#Srbg.(5Z>U^a>,nAnA6(EeT0V>bde&F`Z/Q9R3;N>@8em:XV@\JWLg2E`/.\)SX8>cW3=WB#>'jZH-niH,7)+(T3M8pm:!C&`3%p!K`f1g?+An4_[rBs3W>e7s5RX1^i_gO"/9(V0b0gFud%@#mk:o0hJBS<HH4o%om1:npcYq3G9g7Gfncl(bmLf<.0DB<3(IQ)ZLZ%Bo>\Tnh-6@dQf%BfB2.nZ=6rkm0rHRk0;mt(-Bg>([U5u:;5jA^DQX]I^Rl&qo-1:ebd'b?!Zh-X$_ArDtjt7c!e*M48t6a&M+g@%n,H,'a+o+n\[_comTk>+qEOiLipL_?I[o]a(GJ'K3<.OOO&P9r=+:)Efrp(c8+b`Uf?_37r'1!M!a5~>%AI9_PrivateDataEnd